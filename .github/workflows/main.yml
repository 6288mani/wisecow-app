name: End to End CI/CD workflow for wisecow application by Accuknox Assessment
on:
  push:
    branches:
      - main
env:
  AWS_REGION: us-east-1
  
jobs:
  Build_Push:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.6.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/wisecow-app:latest

  Configure_AWS_credentials:
    runs-on: self-hosted
    needs: Build_Push
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

  Kubeconfig_Setup:
    runs-on: self-hosted
    needs: Configure_AWS_credentials
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Setup kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Get Nodes
        run: kubectl get nodes -o wide
        
  TLS_Cert:
    runs-on: self-hosted
    needs: Kubeconfig_Setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      # Generate TLS key and cert using OpenSSL
      - name: Generate TLS using OpenSSL
        run: |
          mkdir -p ./tls
          openssl genrsa -out ./tls/wisecow.key 2048
          openssl req -x509 -nodes -days 365 \
            -key ./tls/wisecow.key \
            -out ./tls/wisecow.crt \
            -subj "/CN=wisecow.com/O=wisecow"

  TLS_Secret:
    runs-on: self-hosted
    needs: TLS_Cert
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
        
      - name: Create Kubernetes TLS Secret
        run: |
          kubectl create secret tls wisecow-tls \
            --cert=./tls/wisecow.crt \
            --key=./tls/wisecow.key \
            --dry-run=client -o yaml | kubectl apply -f -

  NGINX_Ingress_and_Controller:
    runs-on: self-hosted
    needs: TLS_Secret
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
        
      - name: Install NGINX Ingress Controller
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.14.0/deploy/static/provider/cloud/deploy.yaml
          kubectl wait --for=condition=Ready pod -n ingress-nginx --all --timeout=300s

      # Deploy Ingress resource
      - name: Deploy Ingress for wisecow
        run: |
          kubectl apply -f ingress.yml
  
  Deploy_K8s:
    runs-on: self-hosted
    needs: NGINX_Ingress_and_Controller
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Kubernetes Deployments
        run: |
          kubectl apply -f deployment.yml
          kubectl apply -f service.yml

  List_Services:
    runs-on: self-hosted
    needs: Deploy_K8s
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: List all services
        run: |
          kubectl wait --for=condition=Available --timeout=300s deployment/wisecow-deployment
          kubectl get deploy
          kubectl describe deploy wisecow-deployment
          kubectl wait --for=condition=Ready pod -l app=wisecow --timeout=600s
          kubectl get pod -o wide
          kubectl get svc
